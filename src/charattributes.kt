@JvmInline
value class CharAttribute(val bits:Int)
{
	val isAlpha get () = ALPHABIT in bits
	val isAlNum get () = ALNUM in bits
	val isDigit get () = DIGITBIT in bits
	val isSpace get () = SPACEBIT in bits
	val isPrintable get () = PRINTBIT in bits
	val isHexDigit  get () = XDIGITBIT in bits

	companion object
	{
		private var bp = 0
		private fun flag () = 1 shl (bp++)

		private operator fun Int.contains (bit:Int)
			= (this and bit) != 0
		
		internal val NOFLAGS = 0
		internal val ALPHABIT = flag()
		internal val DIGITBIT = flag()
		internal val PRINTBIT = flag()
		internal val SPACEBIT = flag()
		internal val XDIGITBIT = flag()
		internal val ALNUM = ALPHABIT or DIGITBIT

		val Non = CharAttribute(0)

		operator fun invoke (ch:Char?) = ch?.let { TABLE.getOrNull(ch.code) } ?: Non
		//* accept (U)ni(C)ode (ID)entifiers?
		const val LUA_UCID = 0
		private val NONASCII = when (LUA_UCID) {
			// consider all non-ascii codepoints to be alphabetic
			1 -> ALPHABIT

			// default
			else -> NOFLAGS
		}

		private val TABLE = intArrayOf(
			// 00
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			SPACEBIT, // 09
			SPACEBIT, // 0a
			SPACEBIT, // 0b
			SPACEBIT, // 0c
			SPACEBIT, // 0d
			NOFLAGS,
			NOFLAGS,
			// 10
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			// 20
			PRINTBIT + SPACEBIT, // 20
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			// 30
			DIGITBIT + PRINTBIT + XDIGITBIT,
			DIGITBIT + PRINTBIT + XDIGITBIT,
			DIGITBIT + PRINTBIT + XDIGITBIT,
			DIGITBIT + PRINTBIT + XDIGITBIT,
			DIGITBIT + PRINTBIT + XDIGITBIT,
			DIGITBIT + PRINTBIT + XDIGITBIT,
			DIGITBIT + PRINTBIT + XDIGITBIT,
			DIGITBIT + PRINTBIT + XDIGITBIT,
			DIGITBIT + PRINTBIT + XDIGITBIT,
			DIGITBIT + PRINTBIT + XDIGITBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			// 40
			PRINTBIT,
			ALPHABIT + PRINTBIT + XDIGITBIT,
			ALPHABIT + PRINTBIT + XDIGITBIT,
			ALPHABIT + PRINTBIT + XDIGITBIT,
			ALPHABIT + PRINTBIT + XDIGITBIT,
			ALPHABIT + PRINTBIT + XDIGITBIT,
			ALPHABIT + PRINTBIT + XDIGITBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			// 50
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			ALPHABIT + PRINTBIT,
			// 60
			PRINTBIT,
			ALPHABIT + PRINTBIT + XDIGITBIT,
			ALPHABIT + PRINTBIT + XDIGITBIT,
			ALPHABIT + PRINTBIT + XDIGITBIT,
			ALPHABIT + PRINTBIT + XDIGITBIT,
			ALPHABIT + PRINTBIT + XDIGITBIT,
			ALPHABIT + PRINTBIT + XDIGITBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			// 70
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			ALPHABIT + PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			PRINTBIT,
			NOFLAGS,
			// 80
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			// 90
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			// a0
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			// b0
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			// c0
			NOFLAGS,
			NOFLAGS,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			// d0
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			// e0
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			// f0
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NONASCII,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
			NOFLAGS,
		).map(::CharAttribute)

	}
}

